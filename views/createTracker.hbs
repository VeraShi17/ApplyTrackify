<h1 class="mb-4">Create a New Tracker for {{list.name}}</h1>
<form id="trackerForm" action="/dashboard/{{list.slug}}/create-tracker" method="POST">
  <div class="mb-3">
    <label for="university" class="form-label">University:</label>
    <input type="text" class="form-control" id="university" name="university" required>
  </div>

  <div class="mb-3">
    <label for="program" class="form-label">Program:</label>
    <input type="text" class="form-control" id="program" name="program" required>
  </div>

  <div class="mb-3">
    <label for="deadline" class="form-label">Deadline:</label>
    <input type="date" class="form-control" id="deadline" name="deadline" required>
  </div>

  <div class="mb-3">
    <label for="submissionStatus" class="form-label">Submission Status:</label>
    <input type="text" class="form-control" id="submissionStatus" name="submissionStatus" required>
  </div>

  <div class="mb-3">
    <label for="applicationStatus" class="form-label">Application Status:</label>
    <input type="text" class="form-control" id="applicationStatus" name="applicationStatus" required>
  </div>

  <div class="mb-3">
    <label for="url" class="form-label">URL:</label>
    <input type="url" class="form-control" id="url" name="url" required>
  </div>

  <div class="mb-3">
    <label for="requirements" class="form-label">Requirements:</label>
    <textarea class="form-control" id="requirements" name="requirements" required></textarea>
  </div>

  <div class="mb-3">
    <label for="memo" class="form-label">Memo:</label>
    <textarea class="form-control" id="memo" name="memo"></textarea>
  </div>

  <button type="submit" class="btn btn-primary">Create Tracker</button>
  <button type="button" class="btn btn-secondary" onclick="history.back();">Cancel</button>

</form>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
document.getElementById('trackerForm').addEventListener('submit', function(event) {
  event.preventDefault(); // Prevent the form from submitting until validation is complete
  var isValid = true;
  var inputs = this.querySelectorAll('[required]');

  // Check each required input
  inputs.forEach(function(input) {
    if (!input.value.trim()) {
      isValid = false;
      input.classList.add('is-invalid');
    } else {
      input.classList.remove('is-invalid');
    }
  });

  // If not valid, show SweetAlert
  if (!isValid) {
    Swal.fire({
      icon: 'error',
      title: 'Oops...',
      text: 'Please fill in all required fields.',
      confirmButtonColor: '#3085d6',
      confirmButtonText: 'OK'
    });
  } else {
    // All fields are valid, perform the fetch request
    var formData = new FormData(this);

    fetch(this.action, {
      method: 'POST',
      body: new URLSearchParams(formData),
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
      }
    })
    .then(response => response.json())
    .then(data => {
      if (data.error) {
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: data.error,
        });
      } else {
        Swal.fire({
          icon: 'success',
          title: 'Success',
          text: data.message,
          confirmButtonColor: '#3085d6',
          confirmButtonText: 'OK'
        }).then((result) => {
          if (result.isConfirmed) {
            window.location.href = `/dashboard/${data.slug}`;
          }
        });
      }
    })
    .catch(error => {
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: 'Server error',
      });
    });
  }
});

document.querySelectorAll('[required]').forEach(function(input) {
  input.addEventListener('input', function() {
    if (this.value.trim()) {
      this.classList.remove('is-invalid');
    }
  });
});
</script>
<style>
.is-invalid {
  border: 1px solid red;
}
</style>
